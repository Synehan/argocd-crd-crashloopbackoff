apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.5.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"cnrm.cloud.google.com/version":"1.5.0"},"creationTimestamp":null,"labels":{"cnrm.cloud.google.com/managed-by-kcc":"true","cnrm.cloud.google.com/system":"true","cnrm.cloud.google.com/tf2crd":"true"},"name":"pubsubsubscriptions.pubsub.cnrm.cloud.google.com"},"spec":{"group":"pubsub.cnrm.cloud.google.com","names":{"categories":["gcp"],"kind":"PubSubSubscription","plural":"pubsubsubscriptions","shortNames":["gcppubsubsubscription","gcppubsubsubscriptions"],"singular":"pubsubsubscription"},"scope":"Namespaced","validation":{"openAPIV3Schema":{"properties":{"apiVersion":{"description":"apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources","type":"string"},"kind":{"description":"kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"properties":{"ackDeadlineSeconds":{"description":"This value is the maximum time after a subscriber receives a message\nbefore the subscriber should acknowledge the message. After message\ndelivery but before the ack deadline expires and before the message is\nacknowledged, it is an outstanding message and will not be delivered\nagain during that time (on a best-effort basis).\n\nFor pull subscriptions, this value is used as the initial value for\nthe ack deadline. To override this value for a given message, call\nsubscriptions.modifyAckDeadline with the corresponding ackId if using\npull. The minimum custom deadline you can specify is 10 seconds. The\nmaximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.\n\nFor push delivery, this value is also used to set the request timeout\nfor the call to the push endpoint.\n\nIf the subscriber never acknowledges the message, the Pub/Sub system\nwill eventually redeliver the message.","type":"integer"},"expirationPolicy":{"description":"A policy that specifies the conditions for this subscription's expiration.\nA subscription is considered active as long as any connected subscriber\nis successfully consuming messages from the subscription or is issuing\noperations on the subscription. If expirationPolicy is not set, a default\npolicy with ttl of 31 days will be used.  If it is set but ttl is \"\", the\nresource never expires.  The minimum allowed value for expirationPolicy.ttl\nis 1 day.","properties":{"ttl":{"description":"Specifies the \"time-to-live\" duration for an associated resource. The\nresource expires if it is not active for a period of ttl.\nIf ttl is not set, the associated resource never expires.\nA duration in seconds with up to nine fractional digits, terminated by 's'.\nExample - \"3.5s\".","type":"string"}},"required":["ttl"],"type":"object"},"messageRetentionDuration":{"description":"How long to retain unacknowledged messages in the subscription's\nbacklog, from the moment a message is published. If\nretainAckedMessages is true, then this also configures the retention\nof acknowledged messages, and thus configures how far back in time a\nsubscriptions.seek can be done. Defaults to 7 days. Cannot be more\nthan 7 days ('\"604800s\"') or less than 10 minutes ('\"600s\"').\n\nA duration in seconds with up to nine fractional digits, terminated\nby 's'. Example: '\"600.5s\"'.","type":"string"},"pushConfig":{"description":"If push delivery is used with this subscription, this field is used to\nconfigure it. An empty pushConfig signifies that the subscriber will\npull and ack messages using API methods.","properties":{"attributes":{"additionalProperties":{"type":"string"},"description":"Endpoint configuration attributes.\n\nEvery endpoint has a set of API supported attributes that can\nbe used to control different aspects of the message delivery.\n\nThe currently supported attribute is x-goog-version, which you\ncan use to change the format of the pushed message. This\nattribute indicates the version of the data expected by\nthe endpoint. This controls the shape of the pushed message\n(i.e., its fields and metadata). The endpoint version is\nbased on the version of the Pub/Sub API.\n\nIf not present during the subscriptions.create call,\nit will default to the version of the API used to make\nsuch call. If not present during a subscriptions.modifyPushConfig\ncall, its value will not be changed. subscriptions.get\ncalls will always return a valid version, even if the\nsubscription was created without this attribute.\n\nThe possible values for this attribute are:\n\n- v1beta1: uses the push format defined in the v1beta1 Pub/Sub API.\n- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.","type":"object"},"oidcToken":{"description":"If specified, Pub/Sub will generate and attach an OIDC JWT token as\nan Authorization header in the HTTP request for every pushed message.","properties":{"audience":{"description":"Audience to be used when generating OIDC token. The audience claim\nidentifies the recipients that the JWT is intended for. The audience\nvalue is a single case-sensitive string. Having multiple values (array)\nfor the audience field is not supported. More info about the OIDC JWT\ntoken audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3\nNote: if not specified, the Push endpoint URL will be used.","type":"string"},"serviceAccountEmail":{"description":"Service account email to be used for generating the OIDC token.\nThe caller (for subscriptions.create, subscriptions.patch, and\nsubscriptions.modifyPushConfig RPCs) must have the\niam.serviceAccounts.actAs permission for the service account.","type":"string"}},"required":["serviceAccountEmail"],"type":"object"},"pushEndpoint":{"description":"A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use\n\"https://example.com/push\".","type":"string"}},"required":["pushEndpoint"],"type":"object"},"retainAckedMessages":{"description":"Indicates whether to retain acknowledged messages. If 'true', then\nmessages are not expunged from the subscription's backlog, even if\nthey are acknowledged, until they fall out of the\nmessageRetentionDuration window.","type":"boolean"},"topicRef":{"oneOf":[{"not":{"required":["external"]},"required":["name"]},{"not":{"anyOf":[{"required":["name"]},{"required":["namespace"]}]},"required":["external"]}],"properties":{"external":{"type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"namespace":{"description":"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","type":"string"}},"type":"object"}},"required":["topicRef"],"type":"object"},"status":{"properties":{"conditions":{"description":"Conditions represents the latest available observation of the resource's current state.","items":{"properties":{"lastTransitionTime":{"description":"Last time the condition transitioned from one status to another.","type":"string"},"message":{"description":"Human-readable message indicating details about last transition.","type":"string"},"reason":{"description":"Unique, one-word, CamelCase reason for the condition's last transition.","type":"string"},"status":{"description":"Status is the status of the condition. Can be True, False, Unknown.","type":"string"},"type":{"description":"Type is the type of the condition.","type":"string"}},"type":"object"},"type":"array"},"path":{"type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"version":"v1beta1"},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
  creationTimestamp: "2020-03-20T15:03:15Z"
  generation: 1
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: pubsubsubscriptions.pubsub.cnrm.cloud.google.com
  resourceVersion: "113849566"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/pubsubsubscriptions.pubsub.cnrm.cloud.google.com
  uid: 5ad86c07-5de6-468f-8dbf-5dcc8f529726
spec:
  conversion:
    strategy: None
  group: pubsub.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: PubSubSubscription
    listKind: PubSubSubscriptionList
    plural: pubsubsubscriptions
    shortNames:
    - gcppubsubsubscription
    - gcppubsubsubscriptions
    singular: pubsubsubscription
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'apiVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            ackDeadlineSeconds:
              description: |-
                This value is the maximum time after a subscriber receives a message
                before the subscriber should acknowledge the message. After message
                delivery but before the ack deadline expires and before the message is
                acknowledged, it is an outstanding message and will not be delivered
                again during that time (on a best-effort basis).

                For pull subscriptions, this value is used as the initial value for
                the ack deadline. To override this value for a given message, call
                subscriptions.modifyAckDeadline with the corresponding ackId if using
                pull. The minimum custom deadline you can specify is 10 seconds. The
                maximum custom deadline you can specify is 600 seconds (10 minutes).
                If this parameter is 0, a default value of 10 seconds is used.

                For push delivery, this value is also used to set the request timeout
                for the call to the push endpoint.

                If the subscriber never acknowledges the message, the Pub/Sub system
                will eventually redeliver the message.
              type: integer
            expirationPolicy:
              description: |-
                A policy that specifies the conditions for this subscription's expiration.
                A subscription is considered active as long as any connected subscriber
                is successfully consuming messages from the subscription or is issuing
                operations on the subscription. If expirationPolicy is not set, a default
                policy with ttl of 31 days will be used.  If it is set but ttl is "", the
                resource never expires.  The minimum allowed value for expirationPolicy.ttl
                is 1 day.
              properties:
                ttl:
                  description: |-
                    Specifies the "time-to-live" duration for an associated resource. The
                    resource expires if it is not active for a period of ttl.
                    If ttl is not set, the associated resource never expires.
                    A duration in seconds with up to nine fractional digits, terminated by 's'.
                    Example - "3.5s".
                  type: string
              required:
              - ttl
              type: object
            messageRetentionDuration:
              description: |-
                How long to retain unacknowledged messages in the subscription's
                backlog, from the moment a message is published. If
                retainAckedMessages is true, then this also configures the retention
                of acknowledged messages, and thus configures how far back in time a
                subscriptions.seek can be done. Defaults to 7 days. Cannot be more
                than 7 days ('"604800s"') or less than 10 minutes ('"600s"').

                A duration in seconds with up to nine fractional digits, terminated
                by 's'. Example: '"600.5s"'.
              type: string
            pushConfig:
              description: |-
                If push delivery is used with this subscription, this field is used to
                configure it. An empty pushConfig signifies that the subscriber will
                pull and ack messages using API methods.
              properties:
                attributes:
                  additionalProperties:
                    type: string
                  description: |-
                    Endpoint configuration attributes.

                    Every endpoint has a set of API supported attributes that can
                    be used to control different aspects of the message delivery.

                    The currently supported attribute is x-goog-version, which you
                    can use to change the format of the pushed message. This
                    attribute indicates the version of the data expected by
                    the endpoint. This controls the shape of the pushed message
                    (i.e., its fields and metadata). The endpoint version is
                    based on the version of the Pub/Sub API.

                    If not present during the subscriptions.create call,
                    it will default to the version of the API used to make
                    such call. If not present during a subscriptions.modifyPushConfig
                    call, its value will not be changed. subscriptions.get
                    calls will always return a valid version, even if the
                    subscription was created without this attribute.

                    The possible values for this attribute are:

                    - v1beta1: uses the push format defined in the v1beta1 Pub/Sub API.
                    - v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.
                  type: object
                oidcToken:
                  description: |-
                    If specified, Pub/Sub will generate and attach an OIDC JWT token as
                    an Authorization header in the HTTP request for every pushed message.
                  properties:
                    audience:
                      description: |-
                        Audience to be used when generating OIDC token. The audience claim
                        identifies the recipients that the JWT is intended for. The audience
                        value is a single case-sensitive string. Having multiple values (array)
                        for the audience field is not supported. More info about the OIDC JWT
                        token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
                        Note: if not specified, the Push endpoint URL will be used.
                      type: string
                    serviceAccountEmail:
                      description: |-
                        Service account email to be used for generating the OIDC token.
                        The caller (for subscriptions.create, subscriptions.patch, and
                        subscriptions.modifyPushConfig RPCs) must have the
                        iam.serviceAccounts.actAs permission for the service account.
                      type: string
                  required:
                  - serviceAccountEmail
                  type: object
                pushEndpoint:
                  description: |-
                    A URL locating the endpoint to which messages should be pushed.
                    For example, a Webhook endpoint might use
                    "https://example.com/push".
                  type: string
              required:
              - pushEndpoint
              type: object
            retainAckedMessages:
              description: |-
                Indicates whether to retain acknowledged messages. If 'true', then
                messages are not expunged from the subscription's backlog, even if
                they are acknowledged, until they fall out of the
                messageRetentionDuration window.
              type: boolean
            topicRef:
              oneOf:
              - not:
                  required:
                  - external
                required:
                - name
              - not:
                  anyOf:
                  - required:
                    - name
                  - required:
                    - namespace
                required:
                - external
              properties:
                external:
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
              type: object
          required:
          - topicRef
          type: object
        status:
          properties:
            conditions:
              description: Conditions represents the latest available observation
                of the resource's current state.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    type: string
                  message:
                    description: Human-readable message indicating details about last
                      transition.
                    type: string
                  reason:
                    description: Unique, one-word, CamelCase reason for the condition's
                      last transition.
                    type: string
                  status:
                    description: Status is the status of the condition. Can be True,
                      False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                type: object
              type: array
            path:
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    categories:
    - gcp
    kind: PubSubSubscription
    listKind: PubSubSubscriptionList
    plural: pubsubsubscriptions
    shortNames:
    - gcppubsubsubscription
    - gcppubsubsubscriptions
    singular: pubsubsubscription
  conditions:
  - lastTransitionTime: "2020-03-20T15:03:15Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: null
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
